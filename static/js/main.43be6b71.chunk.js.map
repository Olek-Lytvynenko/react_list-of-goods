{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByLength","setState","LENGTH","sortAlphabetically","ALPHABET","reverseGoods","resetSort","newGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","this","ifChange","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,SAAS,CAAEH,SAAUL,EAASS,UAPvC,EAUEC,mBAAqB,WACnB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,YAXvC,EAcEC,aAAe,WACb,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAhBzB,EAoBES,UAAY,WACV,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,IAAMU,EAzDH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAgBzB,OAdAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQd,GACN,KAAKL,EAASW,SACZ,OAAOO,EAAGE,cAAcD,GAE1B,KAAKnB,EAASS,OACZ,OAAOS,EAAGG,OAASF,EAAGE,OAExB,KAAKrB,EAASM,KACd,QACE,OAAO,MAITF,EACKY,EAAaM,UAGfN,EAiCYO,CAAkBtB,EAAiBuB,KAAKrB,OACzD,EAAiCqB,KAAKrB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZqB,EAAWrB,GAAcC,IAAaL,EAASM,KAErD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYvB,IAAaL,EAASW,WAGtCkB,QAASL,KAAKd,mBARhB,iCAaA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYvB,IAAaL,EAASS,SAGtCoB,QAASL,KAAKjB,aARhB,4BAaA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAaxB,IAGjByB,QAASL,KAAKZ,aARhB,qBAaCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASL,KAAKX,UAHhB,sBAUJ,6BACE,6BACGC,EAASgB,KAAI,SAAAC,GAAI,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBArFvB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.43be6b71.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetSort = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const newGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n    const ifChange = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {ifChange && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {newGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}